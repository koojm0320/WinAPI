=========================================== HomeWork =========================================== 
================================================================================================ 
0715 과제

로직 과제 X

타임어택. 윈도우 창 만들기 (8분)
ㄴ 수업 시간에 진행한 네이밍 규칙으로 진행할 것
	ㄴ 간소화 X


열심히 조사. 조사하면서 공부

- CALLBACK Function
- DC(GetDC / ReleaseDC)
- BeginPaint / EndPaint
- PAINTSTRUCT
- WM_PAINT

================================================================================================
0716 과제

과제 01. WinAPI 츨력

- 함수 출력해서 만들 것

- 자기 이름(한글) + UnrealEngine (영문)
ㄴ 크기: 800 X 800 화면 절반을 채우는 크기로 만들 것

- 마우스 왼쪽을 누르면 한글자씩 출력 + 오른쪽을 누르면 한글자씩 지워진다.

※ 도형 관련 함수 사용 금지


과제 02. 구구단

- 예외처리: 구구단의 본질 (1단 이하 출력 x, 9단 이하 출력 x)

- 마우스 왼쪽 클릭을 할 시 1단씩 생기고 우클릭을 할 시 한 단씩 지워진다.

- 구구단은 3단씩 개행한다.


과제 03. 사각형 이동

- 방향키를 통해 사각형을 움직이면 OK

- 예외처리: 사각형은 화면 밖으로 나갈 수 없다.

열심히 조사.
InvaildateRect, SetTimer, KillTimer

================================================================================================

0717 과제

과제 01. 오망성 출력

- 오망성을 마법진처럼 만들어 올 것

- 양식 자유 -> 본인이 생각한 *효율적인 방식*으로 해볼 것

- 반복문, 배열 등을 사용해볼 것


과제 02. 사각형 2개 움직이기

- 총 사각형의 개수는 2개

- 하나는 움직일 수 있는 사각형 / 다른 하나는 움직일 수 없는 사각형

- 움직일 수 없는 사각형을 움직일 수 있는 사각형을 밀어낼 수 있으면 OK

- 예외처리
ㄴ 1. 두 개의 사각형은 화면 밖으로 나갈 수 없음.
ㄴ 2. 두 개의 사각형을 초기 위치로 되돌리는 기능을 추가할 것.


과제 03. 사각형 영혼 밀어넣기

- 시작은 큰 사각형 2개 작은 사각형 1개

- 내가 움직일 수 있는 사각형 안에는 작은 사각형이 들어 있어야 함.

- 사각형을 움직이면 작은 사각형 역시 움직인다.
ㄴ 충돌이 됐을 때

- 큰 사각형끼리 충돌이 발생하면 작은 사각형은 충돌이 된 반대편 사각형으로 이동

※ 이 때 움직일 수 있는 사각형은 작은 사각형을 가지고 있는 큰 사각형만 움직일 수 있다.

- 예외처리: 작은 사각형은 큰 사각형을 벗어날 수 없다.

================================================================================================

다음 주 월요일 수업시작 전까지
ㄴ API 1주차 과제 제출

1. 메일로 제출
ㄴ 메일 제목: 언리얼 1기_API 1주차 과제_이름
ㄴ 압축 파일: 언리얼 1기_API 1주차 과제_이름.zip

2. 메일 내용에 특이사항 기입

※ 실행이 되게 보낼 것
※ 용량 최적화 해서 보낼 것

================================================================================================

0718 과제

과제 01. 사각형 4단 밀기

- 사각형의 개수는 총 4개

- 마우스로 화면에 그려진 4개의 사각형 중 아무거나 선택해 자유롭게 움직일 수 있으면 된다.

- 마우스로 움직이고 있는 사각형이 다른 사각형과 충돌되면 사각형은 자연스럽게 밀려난다.

- 사각형은 화면 밖으로 나갈 수 없다.

♣ 사각형을 치면 에어하키처럼 밀려나다가 벽에 부딪히면 반대방향으로 튕기고 가속도가 점점 떨어짐


과제 02. 마우스로 무작위 도형 출력

- 마우스로 클릭한 좌표에 무작위 도형을 출력한다.

- 이때 도형의 크기 / 모양 / 종류까지 모두 무작위로 할 것.
ㄴ 도형의 종류: 사각형, 원, 삼각형, 다각형

※ 다각형 및 삼각형-> Polygon()


과제 03. 애플 로고 출력

- 근성, 반복문, 함수, 클래스 모두 OK
ㄴ 꼼수 X

- SetPixel + @로 진행

- 사이즈 가로 및 세로 -> 화면을 가득 채우는 크기

♣ 반복문, 배열을 어떻게 사용할 것인가, 곡선처리를 어떻게 할 것인가

열심히 조사. GetASyncKeyState

================================================================================================

0722 과제

※ 포트폴리오 구체화 진행할 것.
ㄴ 명확한 장르 선정 + 리소스 수집

이미지 추가 01. 두더지 게임 (일단 스킵)

- 상황에 맞는 이미지를 사용
ㄴ 두더지 없을 때, 나왔을 때, 때렸을때, 망치 (대기, 때릴 때)

ShowCursor함수 필요
ptMouse에 이미지를 씌움


과제 01. 종스크롤 슈팅 기본 (여기에다가 이미지 씌우기)

- 플레이어 체력바 설정(적과 충돌 시 체력 감소)

- 플레이어가 발사한 총알로 적을 제거한다.

과제 02. 도형 회전

- 사각형을 회전 시킨다.
ㄴ Rectangle() 사용, hdc 사용

- 회전축이 바꾸니 상태면 상태 좌표로 이동하게 구현해 볼 것

================================================================================================

※ 포트폴리오 선행 작업

0723 과제

과제 01. 지렁이 만들기

- 이미지 추가 X

- 지렁이는 구슬이 꼬리를 물고 이어지는 형태로 만들 것
ㄴ 각 구슬마다 번호를 표기할 것

- 지렁이는 기본적으로 화면 밖의 무작위 위치에서 등장하며 시작한다.

- 특별한 키 입력 없이도 지렁이는 화면 안에서 움직인다.

- 벽에 부딪히면 튕겨져 나와야 하고 왼쪽 / 오른쪽 방향키로 조종도 가능해야 한다.
ㄴ 조종을 할 때 따라오는 구슬은 머리가 방향을 튼다고 같이 틀면 안됨
ㄴ 머리가 있던 위치까지 와서 방향을 전환한다.